var storelist;
var map;
var markersArray = [];
var mapdata;
var infinite;
var infoWindows = [];
var $zoom = {1:14,5:13,10:12,15:12,20:12,25:11};
var storeIcon = '/typo3conf/ext/denner_stores/Resources/Public/Icons/denner_marker.png';
var currentClosest;
var xxxargumentMigration = {
	'store-opened-now': 'openednow',
};
var argumentMigration = {
	'store-zipcity': 'zipcity',
	'storeZipcity': 'zipcity',
	'store-radius': 'radius',
	'storeRadius': 'radius',
	'store-lat': 'userlat',
	'storeLat': 'userlat',
	'store-long': 'userlong',
	'storeLong': 'userlong',
	'store-opened-now': 'openednow',
	'storeOpenednow': 'openednow',
	'store-open-on-sunday': 'openonsunday',
	'storeOpenonsunday': 'openonsunday',
	'store-opened-until-20': 'openeduntil20',
	'storeOpeneduntil20': 'openeduntil20'
};
var argumentMigrationDynamic = {
	'store-channel': 'channel',
	'storeChannel': 'channel',
	'store-service': 'service',
	'storeService': 'service'
};
/*
var $ = jQuery.noConflict();

if(!cs2) {
	var cs2 = jQuery.noConflict();
}
*/
function updateMap(items,fromLocator) {

		//var markerBounds = new google.maps.LatLngBounds();
	/*
		if(infinite)
			infinite.destroy();*/
	//	if(!mapdata) {
			/*
			if(items) {
				mapdata = cs2(items).first().data('mapdata');
			} else {
				if(cs2('.storeitem').length) {
					mapdata = cs2('.storeitem').first().data('mapdata');
				}
			}
			*/
		var data = cs2('#locatorform').serialize();

		//cs2.fancybox.showLoading();
		cs2.ajax({
			url: mapurl,
			type: "POST",
			cache: false,
			async: true,
			data: data,
			dataType: "json",
			complete: function (result) {
				mapdata = result.responseJSON;
				cs2.fancybox.hideLoading();
				collapseAllStoreInList();

				if(mapdata) {
					cs2.each(mapdata, function(key, data) {
						var latLng = new google.maps.LatLng(data.lat, data.long);
						var marker = new google.maps.Marker({
							position: latLng,
							title: data.title,
							uid: data.uid,
							cursor: 'pointer',
							icon: storeIcon
						});
						marker.setMap(map);
						marker.set('uniqueid',data.uid);
						markersArray.push(marker);
						//markerBounds.extend(latLng);

						if (fromLocator == 0){
							var content = '<div class="infoWindow" >';
							content += '<div>'+data.name+'</div>';
							content += '<div>'+data.street+'</div>';
							content += '<div>'+data.zipcity+'</div>';
							content += '<div>&nbsp;</div>';
							content += '<div class="list_link only_map_link" id="'+data.uid+'" ><a href="'+data.uri+'" title="'+data.label+'">'+data.label+'</a></div>';
							content += '</div>';

							var infowindow = new google.maps.InfoWindow({
								content: content
							});
							infoWindows.push(infowindow);

							google.maps.event.addListener(marker, 'click', (function(marker) {
								return function() {
									var myItem = cs2('#store-'+marker.uid,'#storeslist');
									if (myItem.length) {
										cs2('html, body').animate({
											'scrollTop':  (cs2('#store-'+marker.uid,'#storeslist').offset().top-100)
										}, 200);
										if(cs2('a[data-storeuid='+marker.uid+']','#storeslist').length) {
											cs2('a[data-storeuid=' + marker.uid + ']', '#storeslist').click();
										}
									}
									if(cs2('#map_long').length){
										cs2('#map_long').val(data.long);
									}
									if(cs2('#map_lat').length){
										cs2('#map_lat').val(data.lat);
									}
									closeAllInfoWindows();
									infowindow.open(map,marker);
								}
							})(marker));
						} else {
							var content = '<div class="infoWindow" >';
							content += '<div>'+data.name+'</div>';
							content += '<div>'+data.street+'</div>';
							content += '<div>'+data.zipcity+'</div>';
							content += '<div>&nbsp;</div>';
							content += '<div class="list_link" id="'+data.uid+'" ><a href="'+data.uri+'" title="'+data.label+'">'+data.label+'</a></div>';
							content += '</div>';

							var infowindow = new google.maps.InfoWindow({
								content: content
							});
							infoWindows.push(infowindow);

							google.maps.event.addListener(marker, 'click', function() {
								closeAllInfoWindows();
								infowindow.open(map,marker);
							});
							/*if(currentClosest && marker.get('uniqueid')==currentClosest) {
								infowindow.open(map,marker);
							}*/
						}

					});

					if(fromLocator < 0) {
						if(Modernizr.geolocation === true) {
							if (cs2('#long').val() == 0){
								navigator.geolocation.getCurrentPosition(placePostionMarker);
							}
						}

						//map.initialZoom = true;
						//map.fitBounds(markerBounds);

						doAccordion();
					}
				}
				if(fromLocator > 0) {
					setMapPosition();

					mapdata = '';
					//doyourway(fromLocator);
					cs2.fancybox.hideLoading();
					if (fromLocator != 0) {
						closeAllInfoWindows();
						if(markersArray.length > 0) {
							for(i in markersArray) {
								var m = markersArray[i];
								if(m.get('uniqueid')==currentClosest) {
									google.maps.event.trigger(m, 'click');
								}
							}
						}
					}
				}
			},
			error: function () {
				cs2.fancybox.hideLoading();
			}
		})


	//	}
	/*	if(cs2('.storeitem').length) {
			cs2('.storeitem').removeAttr('data-mapdata');
		}
	*/

	}

	function placePostionMarker(position){
		if(position.coords.longitude && position.coords.latitude) {

			var centerLatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
			var centermarker = new google.maps.Marker({
				position: centerLatLng,
				map: map,
				title: ''
			});

		}
	}

	function closeAllInfoWindows() {
		for (var i=0;i<infoWindows.length;i++) {
			infoWindows[i].close();
		}
	}
	/*
	// Removes the overlays from the map, but keeps them in the array
	function clearOverlays() {
		if (markersArray) {
			for (i in markersArray) {
				markersArray[i].setMap(null);
			}
		}
	}
	*/
	function deleteOverlays() {
		if (markersArray) {
			for (i in markersArray) {
				markersArray[i].setMap(null);
			}
			markersArray.length = 0;
		}
	}

	function doyourway(fromLocator) {
		return false;
		/*infinite = new Waypoint.Infinite({
			element: cs2('.infinite-container')[0],
			onBeforePageLoad: function() {
				cs2.fancybox.showLoading();
			},
			onAfterPageLoad: function(items) {
				updateMap(items,fromLocator);
			}
		});*/
	}

	function arrayCompare(a1, a2) {
		if (a1.length != a2.length) return false;
		var length = a2.length;
		for (var i = 0; i < length; i++) {
			if (a1[i] !== a2[i]) return false;
		}
		return true;
	}

	function inArray(needle, haystack) {
		var length = haystack.length;
		for(var i = 0; i < length; i++) {
			if(typeof haystack[i] == 'object') {
				if(arrayCompare(haystack[i], needle)) return true;
			} else {
				if(haystack[i] == needle) return true;
			}
		}
		return false;
	}

	function strcspn (str, mask, start, length) {
		start = start || 0;
		length = typeof length === 'undefined' ? str.length : (length || 0);
		if (start < 0) {
			start = str.length + start;
		}
		if (length < 0){
			length = str.length - start + length;
		}
		if (start < 0 || start >= str.length || length <= 0 || e >= str.length){
			return 0;
		}
		var e = Math.min(str.length, start + length);
		for (var i = start, lgth = 0; i < e; i++) {
			if (mask.indexOf(str.charAt(i)) !== -1) {
				break;
			}
			++lgth;
		}
		return lgth;
	}

	initialize = function($myid) {
		$ = jQuery.noConflict();
		var isDraggable = $(document).width() > 480 ? true : false;
		var mapOptions = {
			draggable: true,
			scrollwheel: false,
			center: {lat: 46.4840, lng: 8.1336},
			zoom: 8,
			mapTypeControl: false,
			zoomControl: true,
			zoomControlOptions: {
				position: google.maps.ControlPosition.RIGHT_BOTTOM
			}
		};
	//console.log('mapoptions',mapOptions);
		map = new google.maps.Map(document.getElementById($myid), mapOptions);
		if($myid != 'map-only') {
			google.maps.event.addListenerOnce(map, 'idle', function() {
				var pathArray = window.location.pathname.split('/');
				//console.log('path array',pathArray);
				//console.log('inArray',inArray(argumentMigration, pathArray));
				var executeList = false;
				if(pathArray.length>0 && inArray(argumentMigration, pathArray)){
					$.each(argumentMigration, function (key, element) {
						if (cs2('#' + element).is(':checkbox')) {
							cs2('#' + element).prop('checked', false);
						} else {
							cs2('#' + element).val(element === 'radius' ? '5': '');
						}
					});
				}
				if(argumentMigrationDynamic.lenght>0) {
					$.each(argumentMigrationDynamic, function (key, element) {
						cs2('.' + element).prop('checked', false);
					});
				}
				for (i = 0; i < pathArray.length; i++) {
					if (argumentMigration[pathArray[i]]) {
						if (cs2('#' + argumentMigration[pathArray[i]]).is(':checkbox')) {
							cs2('#' + argumentMigration[pathArray[i]]).prop('checked', pathArray[i+1] > 0 ? true : false);
						} else {
							cs2('#' + argumentMigration[pathArray[i]]).val(pathArray[i+1]);
						}
						executeList = true;
					} else if (argumentMigrationDynamic) {
						var iPos = strcspn(pathArray[i] , '0123456789');
						if (iPos && argumentMigrationDynamic[pathArray[i].substr(0, iPos)]) {
							cs2('#' + argumentMigrationDynamic[pathArray[i].substr(0, iPos)] + pathArray[i+1]).prop('checked', pathArray[i+1] > 0 ? true : false);
							executeList = true;
						}
					}
				}
				if (executeList) {
					cs2('input[type=checkbox],input[type=radio]').picker('update');
					cs2("#radius").selectBoxIt();
				}
				if(cs2('#zipcity').val() != '' || executeList){
					showlist();
				} else {
					updateMap(null,1);
					cs2('#map-canvas').css('visibility','visible');
				}
			});
		}
		//setMapPosition();
	}

	function setMapPosition() {

		if(cs2('#zipcity').val() != '' || (cs2('#long').val() && cs2('#lat').val())) {
			map.setZoom($zoom[cs2('#radius').val()]);
		} else {
			map.setZoom(8);
		}

		var country = "Switzerland";
		geocoder = new google.maps.Geocoder();
		if(!cs2('#long').val() && !cs2('#lat').val()) {
			geocoder.geocode( {'address' : country}, function(results, status) {
				if (status == google.maps.GeocoderStatus.OK) {
					map.setCenter(results[0].geometry.location);
				}
			});
		} else  {
			map.setCenter(new google.maps.LatLng(cs2('#lat').val(), cs2('#long').val()));
		}
	}

	/* https://forge.cs2.ch/issues/22614 */
	function doAccordion(){
		if(screen.width < 480){
			//cs2('.storeitem.infinite-item').removeClass('mobileview-open');
			//cs2('.storeitem.infinite-item').addClass('mobileview-open');
			cs2('.storeitem.infinite-item .panel-heading a').addClass('collapsed');
			cs2('.storeitem.infinite-item .panel-collapse').removeClass('show');
		}
	}




	/*
	cs2(document).on('click','.mobileview-closed',function(e){
		//cs2('.itembody.row',this).show();
		cs2(this).removeClass('mobileview-closed').addClass('mobileview-open');
	});
	cs2(document).on('click','.mobileview-open',function(e){
		//cs2('.itembody.row',this).hide();
		cs2(this).removeClass('mobileview-open').addClass('mobileview-closed');
	});
	*/

	/*
	cs2(document).on('focus.form','#locatorform input,#locatorform select',function(){
		if(storelist) {
			storelist.abort();
		}
	});
	*/

	/*
	cs2(document).on('click','.infoWindow .list_link',function(e){
		var myUid = cs2(this).attr('id');
		var myItem = cs2('#collapse-'+myUid,'#storeslist');
		var link_to_detail = cs2(myItem).data('detaillink');
		window.location.href = '/'+link_to_detail;

	});
	*/
	function geocodeAddress() {
		location_on = 0;
		var address = cs2('#zipcity').val()+',Switzerland,Switzerland';
		geocoder = new google.maps.Geocoder();
		geocoder.geocode({'address': address}, function(results, status) {
			if (status === google.maps.GeocoderStatus.OK) {
				//map.setCenter(results[0].geometry.location);
				cs2('#long').val(results[0].geometry.location.lng());
				cs2('#lat').val(results[0].geometry.location.lat());
				deleteOverlays();
				showlist();
			} else {
				alert('Geocode was not successful for the following reason: ' + status);
			}
		});
	}

	function collapseAllStoreInList() {
		var windowWidth = cs2(window).width();
		if(windowWidth <= 480) {
			cs2('.storeitem.infinite-item .panel-collapse').removeClass('show');
		}
	}

//cs2(document).ready(function(){
require(['jquery','typeahead'],function($,typeahead){

	$(document).on('click','.only_map_link',function(){
		$('#only_map_form').submit();
	});

	$(document).on('click','.showstoredetail',function(e){
		e.preventDefault();
		var item = $(this);
		var element = item.parents('.storeitem');
		if(!item.hasClass('open') && item.attr('href')) {
			$.ajax({
				url: item.attr('href'),
				type: "POST",
				cache: false,
				async: true,
				beforeSend: function() {
					$('.page-overlay').addClass('show');
				},
				success: function (html) {
					$(html).find('.emptycontent').insertAfter(element);
				},
				complete: function (html) {
					$('.page-overlay').removeClass('show');
					item.addClass('open');
					$('html, body').animate({
						'scrollTop':  (element.offset().top-75)
					}, 200);
				}
			})
		} else {
			$('.showstoredetail.open').removeClass('open');
			$('.emptycontent').remove();
		}
	});

	$(document).on('click','.morestores',function(e){
		e.preventDefault();
		showlist($(this).data('params'));
		$(this).parent().detach();
	});


	$(window).on("load resize",function(e){
		collapseAllStoreInList();
	});
});